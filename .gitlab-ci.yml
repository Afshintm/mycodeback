stages:
    - build
    - test
    - docker
    - deploy

variables:
    test: "MicroServices/Essence.Communication.Service/Essence.Communication.UnitTests/Essence.Communication.UnitTests.csproj"
    REPOSITORY_URL: 590986216309.dkr.ecr.ap-southeast-2.amazonaws.com/essencecommunicationapi:latest        

.build:
    stage: build
    image: microsoft/dotnet:latest
    script:
        - "dotnet restore ./MicroServices/Essence.Communication.Service/Essence.Communication.Api/Essence.Communication.Api.csproj"    
        - "dotnet build ./MicroServices/Essence.Communication.Service/Essence.Communication.Api/Essence.Communication.Api.csproj"

.test:
    stage: test
    image: microsoft/dotnet:latest    
    script:
        - "dotnet test $test"

docker:
    stage: docker
    image: docker:latest
    variables:
        AWS_DEFAULT_REGION: "ap-southeast-2"
        ECR_URI : 590986216309.dkr.ecr.ap-southeast-2.amazonaws.com
        ECR_NAME : essencecommunicationapi
        ENVIRONMENT : Production
        VERSION: 1.1.1
        REPOSITORY_URL: 590986216309.dkr.ecr.ap-southeast-2.amazonaws.com/essencecommunicationapi:latest       
    services:
        - docker:dind
        
    before_script:
        - apk add --no-cache curl jq python py-pip
        - pip install awscli
    script:
        - echo "docker image"
        - $(aws ecr get-login --no-include-email --region ap-southeast-2)
        - "docker build --pull -t $REPOSITORY_URL -f MicroServices/Essence.Communication.Service/Essence.Communication.Api/Dockerfile ."
        - docker push $REPOSITORY_URL
    only:
      - master
    tags:
      - docker

.deploy:
    stage: deploy
    image: docker:latest    
    variables:
        AWS_DEFAULT_REGION: "ap-southeast-2"
        REPOSITORY_URL: 590986216309.dkr.ecr.ap-southeast-2.amazonaws.com/essencecommunicationapi:latest        
    script:
        - echo $AWS_ACCESS_KEY_ID
        - echo $AWS_SECRET_ACCESS_KEY
        - echo $PROD_LOAD_BALANCER_URL
        - "docker build -t $REPOSITORY_URL -f MicroServices/Essence.Communication.Service/Essence.Communication.Api/Dockerfile ."
        - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
#        - docker build -t $REPOSITORY_URL ./MicroServices/Essence.Communication.Service/Essence.Communication.Api/
#        - docker push $REPOSITORY_URL        
        
