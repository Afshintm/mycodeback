// <auto-generated />
using System;
using Essence.Communication.DataBaseServices;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Essence.Communication.DataBaseServices.Migrations
{
    [DbContext(typeof(EventDbContext))]
    partial class EventDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Essence.Communication.DataBaseServices.Daos.EssenceEvent", b =>
                {
                    b.Property<Guid>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new Guid("51097424-9d16-4d39-84a7-cb1e63924f15"));

                    b.Property<long>("Account");

                    b.Property<int>("Code");

                    b.Property<string>("DetailsJson");

                    b.Property<int?>("HorizontalAccuracy");

                    b.Property<bool?>("IsMobile");

                    b.Property<string>("Latitude");

                    b.Property<string>("Longitude");

                    b.Property<string>("PanelTime");

                    b.Property<string>("ServerTime");

                    b.Property<int?>("ServiceProvider");

                    b.Property<int?>("ServiceType");

                    b.Property<int?>("Severity");

                    b.Property<Guid?>("uid");

                    b.HasKey("EventId")
                        .HasName("UQ_EssenceEvent_EventId");

                    b.ToTable("EssenceEvent");
                });

            modelBuilder.Entity("Essence.Communication.DataBaseServices.Daos.HCSEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Account");

                    b.Property<int?>("ActivityType");

                    b.Property<int?>("BatteryLevel");

                    b.Property<int>("Code");

                    b.Property<string>("DeviceDescription");

                    b.Property<string>("DeviceId");

                    b.Property<int?>("DeviceType");

                    b.Property<string>("DurationInRoom");

                    b.Property<string>("EntryTime");

                    b.Property<Guid>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new Guid("96f68b6b-4c8f-43be-817a-429455c65aa3"));

                    b.Property<string>("ExitTime");

                    b.Property<int?>("Grade");

                    b.Property<int?>("HorizontalAccuracy");

                    b.Property<bool?>("IsMobile");

                    b.Property<string>("LastContactTime");

                    b.Property<string>("Latitude");

                    b.Property<string>("Longitude");

                    b.Property<string>("MaximumOutOfHomeDuration");

                    b.Property<Guid>("OriginalEventId");

                    b.Property<string>("PanelTime");

                    b.Property<string>("PeriodEndTime");

                    b.Property<string>("PeriodStartTime");

                    b.Property<string>("PowerFailureDuration");

                    b.Property<string>("PowerRestoredDuration");

                    b.Property<string>("ServerTime");

                    b.Property<int?>("ServiceProvider");

                    b.Property<int?>("ServiceType");

                    b.Property<int?>("Severity");

                    b.HasKey("Id")
                        .HasName("PK_HCSEvent_Id");

                    b.HasIndex("EventId")
                        .IsUnique()
                        .HasName("UQ_HCSEvent_EventId");

                    b.HasIndex("OriginalEventId");

                    b.ToTable("HCSEvent");
                });

            modelBuilder.Entity("Essence.Communication.DataBaseServices.Daos.HCSEvent", b =>
                {
                    b.HasOne("Essence.Communication.DataBaseServices.Daos.EssenceEvent", "OriginalEvent")
                        .WithMany("HCSEvents")
                        .HasForeignKey("OriginalEventId")
                        .HasConstraintName("FK_HCSEvent_EssenceEvent")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
